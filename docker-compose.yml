version: '3.7'
services:

  backend:
    container_name: backend
    build: ./backend
    ports:
      - 5000:5000
    # volumes:
    #   - ./backend:/app
    command: uvicorn app.main:app --reload --host 0.0.0.0 --port 5000
    env_file:
      - ./backend/.env
    depends_on:
      - db

  frontend:
    container_name: frontend
    build: ./frontend
    volumes:
      - './frontend:/app'
      - '/app/node_modules'
    ports:
      - 8080:8080

  db:
    container_name: postgres
    image: postgres:15.1
    restart: always
    # ports:
    #   - "5432:5432"
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
        #      - ./sql/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: example
      POSTGRES_DB: fruitjokes

  pgAdmin:
    container_name: pgAdmin
    restart: unless-stopped
    image: dpage/pgadmin4:6.18
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_LISTEN_PORT: 5050
    volumes:
        - ./data/pgadmin:/var/lib/pgadmin
    ports:
        - "5050:5050"
    depends_on:
        - db

  cache:
    container_name: redis
    image: redis:7.0
    restart: always
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes:
      - ./data/cache:/data
